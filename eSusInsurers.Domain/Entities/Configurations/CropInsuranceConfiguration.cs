// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using eSusInsurers.Domain.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace eSusInsurers.Domain.Entities.Configurations
{
    public partial class CropInsuranceConfiguration : IEntityTypeConfiguration<CropInsurance>
    {
        public void Configure(EntityTypeBuilder<CropInsurance> entity)
        {
            entity.Property(x => x.Id)
                           .HasColumnName("CropInsuranceId");

            entity.HasKey(e => e.Id).HasName("PK__CropInsu__61690A0DCA9B17A4");

            entity.ToTable("CropInsurance", tb => tb.HasTrigger("trigger_CropInsurance_AU"));

            entity.Property(e => e.Comments)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.CropName)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Latitude).HasColumnType("decimal(8, 6)");
            entity.Property(e => e.Longitude).HasColumnType("decimal(9, 6)");
            entity.Property(e => e.ModifiedBy)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.Status)
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.FarmerCrop).WithMany(p => p.CropInsurances)
                .HasForeignKey(d => d.FarmerCropId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_FarmerCrops_CropInsurance");

            entity.HasOne(d => d.Farmer).WithMany(p => p.CropInsurances)
                .HasForeignKey(d => d.FarmerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Farmers_CropInsurance");

            entity.HasOne(d => d.InsurancePolicy).WithMany(p => p.CropInsurances)
                .HasForeignKey(d => d.InsurancePolicyId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_InsurancePolicies_CropInsurance");

            entity.HasOne(d => d.InsuranceRisk).WithMany(p => p.CropInsurances)
                .HasForeignKey(d => d.InsuranceRiskId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_InsuranceRisk_CropInsurance");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<CropInsurance> entity);
    }
}
