// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using eSusInsurers.Domain.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace eSusInsurers.Domain.Entities.Configurations
{
    public partial class InsuranceRiskConfiguration : IEntityTypeConfiguration<InsuranceRisk>
    {
        public void Configure(EntityTypeBuilder<InsuranceRisk> entity)
        {
            entity.Property(x => x.Id)
                      .HasColumnName("InsuranceRiskId");

            entity.HasKey(e => e.Id).HasName("PK__Insuranc__1332B5FCCA81E9F2");

            entity.ToTable("InsuranceRisk", tb => tb.HasTrigger("trigger_InsuranceRisk_AU"));

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.CropName)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Deductible).HasColumnType("money");
            entity.Property(e => e.DroughtLoss).HasColumnType("money");
            entity.Property(e => e.ExcessRainfallLoss).HasColumnType("money");
            entity.Property(e => e.FinalPayout).HasColumnType("money");
            entity.Property(e => e.ModifiedBy)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.Payout).HasColumnType("money");
            entity.Property(e => e.TotalLoss).HasColumnType("money");

            entity.HasOne(d => d.InsurancePolicy).WithMany(p => p.InsuranceRisks)
                .HasForeignKey(d => d.InsurancePolicyId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_InsurancePolicy_InsuranceRisk");

            entity.HasOne(d => d.Location).WithMany(p => p.InsuranceRisks)
                .HasForeignKey(d => d.LocationId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Locations_InsuranceRisk");

            entity.HasOne(d => d.Season).WithMany(p => p.InsuranceRisks)
                .HasForeignKey(d => d.SeasonId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Seasons_InsuranceRisk");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<InsuranceRisk> entity);
    }
}
